/* Fun√ßoes de acersso e manipula√ß√£o de DOM

- querySelector () √© uma fun√ß√£o para selecionar UM √öNICO elemendo da p√°gina (DOM).

-querySeletorAll() √© uma fun√ßao para selecionar V√ÅRIOS elementos na p√°gina (DOm).

Nos dois casos, a sele√ß√£o √© feita usando seletores comuns ao que fazemos no CSS*/

/* Exemplo */

const titulo = document.querySelector("h1");
const textoDom = document.querySelector(".texto-dom");
const subtitulos = document.querySelectorAll("h2");
const varios = document.querySelectorAll("p,img,button");
console.log(varios);

/* Modificando elementos do DOM */
titulo.textContent = "Ol√° JavaScript!!";
textoDom.innerHTML = "<i>O M√°rcio ser√° reprovado!!</i>"

/* Selecionar todos os links da lista de refer√™ncias e colocar neles o atributo target valendo _blank */

const links = document.querySelectorAll(".lista-de-referencias a");
console.log(links);

links[0].setAttribute("target", "_blank");

// Se fosse um por um...
// links[0].setAttribute ("target","_blank");

for (let link of links) {
    /* Vers√£o 1 (moderna, serve para qualquer atributo)
     link.setAttribute("target", "_blank"); */

    /* vers√£o 2 ( usando atributos via propriedade)
    mais antiga , vale para atributos nativos do HTML */
    link.target = "_blank"

}

// Manipulando Eventos
const ex1 = document.querySelector("#exemplo01");

// Poder√≠amos tamb√©m usar a fun√ß√£o getelementByld em vez do querySeletor.A diferen√ßa √© que ela s√≥ funciona para sele√ß√£o atrav√©s do ID. Obs.: ou us√°-la N√ÉO COLOQUE #. 
// const ex1 = document.getElementByld("exemplo1");

const msg = document.querySelector("#mensagem");
const pagina = document.querySelector("body");

// Fun√ß√£o Ouvinte de evento (Event Listener)
/* aplicado ao elemento ALVO do evento desejado ("click") e uma fun√ß√£o para executar as a√ß√µes a partir do evento.Obs.: esta fun√ß√£o √© considerada do tipo "an√¥nima" √© conhecida como "callback".*/

ex1.addEventListener("click", function () {
    // Acessamos o par√°grafo vazio e colocamos um cont√©udo dentro dele.
    msg.innerHTML = "Ol√° üòã"

    // Modificar a p√°gina
    pagina.style.fontFamily = "Verdana"
})

// Ouvinte de evento para voltar ao normal (sem texto no par√°grafo e com fonte padr√£o na p√°gina). o evento ocorrer√° ao CLICAR DUAS VEZES no par√°grafo da mensagem.
msg.addEventListener("dblclick", function () {
    msg.innerHTML = ""; // removendo cont√©udo do par√°grafo
    pagina.style.fontFamily = "inital"; // voltando para fonte padr√£o
})



    /// Exemplo 02: modo noturno
const botaoAtivar = document.querySelector("#ativar");

botaoAtivar.addEventListener("click", function () {
    // Usamos o toggle do classList para alternar a aplica√ß√£o/remo√ß√£o da classe "noturno".Na pr√°tica, vira um liga/desliga.

    pagina.classList.toggle("noturno");

    //   Desafio! Fa√ßa aqui mesmo: trocar o texto do bot√£o.
    //  Se a p√°gina estiver com a "desativar". Caso contr√°rio, deve mostar a palavra "ativar". use if/else.

    if (pagina.classList.contains("noturno")) {
        botaoAtivar.innerHTML = "Desativar";

    } else { botaoAtivar.innerHTML = "Ativar";}
});

/* Sobre o duplo e o triplo sinal de igual */
let a = "10";
let b = 10;
let resultado = a == b;
console.log(resultado);

/* == compara VALORES
   === compara VALORES e TIPO DE DADO */





